 //QueryData.getProgramClients(QueryData.uploadedData, "ANGER");
    geProgramClients(data, programName) {
      let outputClients = data.Clients
        .filter(function (client) {
          return client.Programs
            .filter(function (program) { return Object.keys(program)[0].toLowerCase().startsWith(programName.toLowerCase()) 
              && Number(program[Object.keys(program)[0]]) > 0; })
            .length > 0;
        });

      //remove last totals element
      if (outputClients.length > 0 && outputClients[outputClients.length - 1]["Client Name"] == "Totals") {
        outputClients.pop();
      }

      return outputClients;
    }

    getClientsWithRangeServices(data, minServices, maxServices) {
      //service names to ignore
      let ignoredServices = [
        "total direct",
        "administrative activities",
        "case reviews",
        "collateral contacts",
        "community involvement & collaboration",
        "contact with family",
        "program development & research",
        "total indirect",
        "total"
      ];

      // console.log("data.Clients.length: " + data.Clients.length);

      let outputClients = data.Clients
        .filter(function (client) {
          //array of services
          let services = [];

          client.Programs.forEach(function (program) {
            if (Number(program[Object.keys(program)[0]]) == 0) {
              return;
            }

            let prefix = Object.keys(program)[0].split(":")[0].toLowerCase();

            if (ignoredServices.includes(prefix)) {
              return;
            }

            if (!services.includes(prefix)) {
              //add to services
              services.push(prefix);
            }
          });

          // console.log(client["Client Name"] + ">> unique services (" + services.length + "): " + services);

          return maxServices === undefined ? services.length >= minServices : services.length >= minServices && 
          services.length <= maxServices;
        });

      //remove last totals element
      // console.log("outputClients: " + JSON.stringify(outputClients));

      if (outputClients.length > 0 && outputClients[outputClients.length - 1]["Client Name"] == "Totals") {
        outputClients.pop();
      }

      return outputClients;
    }